name: Build and Release i-wallet

on:
  push:
    tags:
      - 'v*'
    branches:
      - main

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ubuntu-latest

    steps:
      # Шаг 1: Клонирование репозитория
      - name: Checkout code
        uses: actions/checkout@v3

      # Шаг 2: Установка Go
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22.2

      # Шаг 3: Установка fyne-cross
      - name: Install fyne-cross
        run: go install github.com/fyne-io/fyne-cross@latest
      
      # Шаг 4: Установка MinGW для сборки Windows
      - name: Install mingw-w64
        run: sudo apt-get install -y mingw-w64

      # Шаг 5: Сборка i-wallet для Linux и Windows
      - name: Build i-wallet for Linux
        run: |
          fyne-cross linux -arch amd64 -output i-wallet-linux -app-id com.example.iwallet -icon ./assets/Icon.png

      - name: Build i-wallet for Windows
        run: |
          fyne-cross windows -arch amd64 -output i-wallet-windows -app-id com.example.iwallet -icon ./assets/Icon.png
      
      - name: Check Linux Build
        run: ls fyne-cross/dist/linux-amd64/
  
      - name: Check Windows Build
        run: ls fyne-cross/dist/windows-amd64/

      - name: Generate a unique tag
        run: |
            TAG_NAME="v$(date +'%Y%m%d%H%M%S')"
            echo "Generated tag: $TAG_NAME"
            echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV

      # Шаг 7: Создание релиза
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: Release ${{ env.TAG_NAME }}
          body: |
            Automated release for version ${{ github.ref_name }}.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.WF_TOKEN }}

      # Шаг 8: Загрузка артефактов в релиз
      - name: Upload Linux Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./fyne-cross/dist/linux-amd64/i-wallet-linux-amd64
          asset_name: i-wallet-linux-amd64.tar.xz
          asset_content_type: application/x-xz
        env:
          GITHUB_TOKEN: ${{ secrets.WF_TOKEN }}

      - name: Upload Windows Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./fyne-cross/dist/windows-amd64/i-wallet-windows-amd64
          asset_name: i-wallet-windows-amd64.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.WF_TOKEN }}