name: Build and Release i-wallet

on:
  push:
    tags:
      - 'v*' 
    branches:
      - main 

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22.2

      - name: Install fyne-cross
        run: go install github.com/fyne-io/fyne-cross@latest
      
      - name: Install mingw-w64
        run: sudo apt-get install -y mingw-w64

      - name: Build i-wallet for Linux
        run: |
          export GOOS=linux
          export GOARCH=amd64
          fyne-cross linux -arch amd64 -output i-wallet-linux -app-id com.example.iwallet -icon ./assets/Icon.png
        env:
          GOOS: linux
          GOARCH: amd64
      
      - name: Build i-wallet for Windows
        run: |
            export GOOS=windows
            export GOARCH=amd64
            fyne-cross windows -arch amd64 -output i-wallet-windows -app-id com.example.iwallet -icon ./assets/Icon.png
          env:
            GOOS: windows
            GOARCH: amd64  
      
      - name: Find the output file
        run: |
          LFILE=$(find ./fyne-cross/dist/linux-amd64/ -name 'i-wallet.tar.xz' -print -quit)
          echo "Found file: $LFILE"
          echo "LFILE_PATH=$LFILE" >> $GITHUB_ENV
          WFILE=$(find ./fyne-cross/dist/windows-amd64/ -name 'i-wallet.zip' -print -quit)
          echo "Found file: $WFILE"
          echo "WFILE_PATH=$WFILE" >> $GITHUB_ENV
      
      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v3
        with:
          name: i-wallet-linux-amd64
          path: ./fyne-cross/dist/linux-amd64/i-wallet-linux
  
      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v3
        with:
          name: i-wallet-windows-amd64
          path: ./fyne-cross/dist/windows-amd64/i-wallet-windows

      - name: Generate a unique tag
        run: |
            TAG_NAME="v$(date +'%Y%m%d%H%M%S')"
            echo "Generated tag: $TAG_NAME"
            echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
            tag_name: ${{ env.TAG_NAME }}
            release_name: Release ${{ env.TAG_NAME }}
            body: |
                Automated release for version ${{ env.TAG_NAME }}.
            draft: false
            prerelease: false
        env:
            GITHUB_TOKEN: ${{ secrets.WF_TOKEN }}

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.FILE_PATH }}
          asset_name: i-wallet-${{ matrix.os }}-${{ matrix.arch }}
          asset_content_type: application/octet-stream
        env:
            GITHUB_TOKEN: ${{ secrets.WF_TOKEN }}