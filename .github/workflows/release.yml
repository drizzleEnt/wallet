name: Build and Release i-wallet

on:
  push:
    tags:
      - 'v*' 
    branches:
      - main 

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [windows, linux]
        arch: [amd64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22.2

      - name: Install fyne-cross
        run: go install github.com/fyne-io/fyne-cross@latest
      
      - name: Install mingw-w64
        run: sudo apt-get install -y mingw-w64

      - name: Build i-wallet for ${{ matrix.os }}-${{ matrix.arch }}
        run: |
          export GOOS=${{ matrix.os }}
          export GOARCH=${{ matrix.arch }}
          fyne-cross ${{ matrix.os }} -arch ${{ matrix.arch }} -output i-wallet -app-id com.example.iwallet -icon ./assets/Icon.png
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
      
      - name: Find the output file
        run: |
          FILE=$(find ./fyne-cross/dist/${{ matrix.os }}-${{ matrix.arch }}/ -name 'i-wallet.*' -print -quit)
          echo "Found file: $FILE"
          echo "FILE_PATH=$FILE" >> $GITHUB_ENV
      
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: i-wallet-${{ matrix.os }}-${{ matrix.arch }}
          path: ./fyne-cross/dist/${{ matrix.os }}-${{ matrix.arch }}/i-wallet

      - name: Generate a unique tag
        run: |
            TAG_NAME="v$(date +'%Y%m%d%H%M%S')"
            echo "Generated tag: $TAG_NAME"
            echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
      
      - name: Debug GITHUB_TOKEN
        run: | 
            echo "GITHUB_TOKEN: ${{ secrets.WF_TOKEN }}"
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
            tag_name: ${{ env.TAG_NAME }}
            release_name: Release ${{ env.TAG_NAME }}
            body: |
                Automated release for version ${{ env.TAG_NAME }}.
            draft: false
            prerelease: false
        env:
            GITHUB_TOKEN: ${{ secrets.WF_TOKEN }}

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.FILE_PATH }}
          asset_name: i-wallet-${{ matrix.os }}-${{ matrix.arch }}
          asset_content_type: application/octet-stream
        env:
            GITHUB_TOKEN: ${{ secrets.WF_TOKEN }}